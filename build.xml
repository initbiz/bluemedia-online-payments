<?xml version="1.0" encoding="UTF-8"?>
<!--
    Phing (http://phing.info/) build file
    Docs: https://www.phing.info/docs/stable/hlhtml/index.html

    @author    Piotr Żuralski <piotr@zuralski.net>
    @copyright 2015 Blue Media
    @since     2015-08-08
    @version   2.3.2
-->
<project name="Płatności Online BM" default="build:dev">

    <property environment="env" file="build.properties"/>
    <property name="project.src_dir" value="${project.basedir}/src" override="true"/>
    <property name="project.build_dir" value="${project.basedir}/build" override="true"/>
    <property name="project.bin_dir" value="${project.basedir}/bin" override="true"/>

    <target name="initialize" hidden="true">
        <delete dir="${project.build_dir}"/>
        <mkdir dir="${project.build_dir}/logs/"/>
    </target>

    <target name="vendors:dev" hidden="true">
        <composer composer="${project.bin_dir}/composer" command="update">
            <arg value="--no-progress"/>
            <arg value="--no-interaction"/>
            <arg value="--no-suggest"/>
            <arg value="--prefer-stable"/>
            <arg value="--prefer-source"/>
        </composer>
        <composer composer="${project.bin_dir}/composer" command="dump-autoload">
            <arg value="--optimize"/>
        </composer>
    </target>

    <target name="vendors:prod" hidden="true">
        <composer composer="${project.bin_dir}/composer" command="update">
            <arg value="--no-dev"/>
            <arg value="--no-progress"/>
            <arg value="--no-interaction"/>
            <arg value="--no-suggest"/>
            <arg value="--prefer-stable"/>
            <arg value="--prefer-dist"/>
        </composer>
        <composer composer="${project.bin_dir}/composer" command="dump-autoload">
            <arg value="--no-dev"/>
            <arg value="--optimize"/>
        </composer>
    </target>

    <target name="qc" description="Quality check" depends="qc:pdepend,qc:phpmetrics,qc:phpspec,qc:phpunit,qc:humbug,qc:sensio-security,qc:phpcb,qc:phpcpd,qc:phpcs,qc:php-cs-fixer,qc:phpdcd,qc:phploc,qc:phpmd"/>

    <target name="qc:behat" description="QC: Behat">
        <exec executable="${project.bin_dir}/behat" checkreturn="true" logoutput="true">
            <arg value="--config=${project.basedir}/behat.yml"/>
            <arg path="${project.basedir}/behat.yml"/>

            <arg value="--no-interaction"/>
        </exec>
    </target>

    <target name="qc:pdepend" description="QC: pDepend">
        <if>
            <available file="${project.basedir}/pdepend.xml" type="file" property="qc.pdepend.file"/>
            <then>
                <exec executable="${project.bin_dir}/pdepend" checkreturn="true" logoutput="true">
                    <arg value="--configuration"/>
                    <arg path="${project.basedir}/pdepend.xml"/>

                    <arg path="${project.src_dir}"/>
                </exec>
            </then>
            <else>
                <echo message="Skipping qc:pdepend" level="warning"/>
            </else>
        </if>
    </target>

    <target name="qc:phpcb" description="QC: Code browser">
        <echo message="Skipping qc:phpcb" level="warning"/>
        <!--<exec executable="${project.bin_dir}/phpcb" checkreturn="true" logoutput="true">-->
            <!--<arg value="&#45;&#45;log"/>-->
            <!--<arg path="${project.build_dir}/logs/"/>-->

            <!--<arg value="&#45;&#45;source"/>-->
            <!--<arg path="${project.src_dir}"/>-->

            <!--<arg value="&#45;&#45;output"/>-->
            <!--<arg path="${project.build_dir}/code-browser/"/>-->
        <!--</exec>-->
    </target>

    <target name="qc:phpcpd" description="QC: PHP Copy/Paste Detector">
        <exec executable="${project.bin_dir}/phpcpd" checkreturn="true" logoutput="true">
            <arg value="--log-pmd"/>
            <arg path="${project.build_dir}/logs/pmd-cpd.xml"/>

            <arg path="${project.src_dir}"/>
        </exec>
    </target>

    <target name="qc:phpcs" description="QC: Code Sniffer">
        <echo message="Skipping qc:phpcs" level="warning"/>
        <!--<exec executable="${project.bin_dir}/phpcs" checkreturn="true" logoutput="true">-->
            <!--<arg path="${project.src_dir}"/>-->
            <!--<arg path="${project.basedir}/tests/"/>-->
        <!--</exec>-->
    </target>

    <target name="qc:php-cs-fixer" description="QC: Coding File fixer (dry-run)">
        <exec executable="${project.bin_dir}/php-cs-fixer" checkreturn="true" logoutput="true">
            <arg line="fix"/>
            <arg value="--dry-run"/>
            <arg value="-vvv"/>
        </exec>
    </target>

    <target name="qc:phpdcd" description="QC: Dead Code Detector">
        <exec executable="${project.bin_dir}/phpdcd" checkreturn="true" logoutput="true">
            <arg line="--no-interaction"/>

            <arg path="${project.src_dir}/"/>
            <arg path="${project.basedir}/tests/"/>
        </exec>
    </target>

    <target name="qc:phploc" description="QC: measure the size and analyzing the structure of a project">
        <echo message="Skipping qc:phploc" level="warning"/>
        <!--<exec executable="${project.bin_dir}/phploc" checkreturn="true" logoutput="true">-->
            <!--<arg value="&#45;&#45;count-tests"/>-->

            <!--<arg path="${project.src_dir}"/>-->
            <!--<arg path="${project.basedir}/tests/"/>-->
        <!--</exec>-->
    </target>


    <target name="qc:phpmd" description="QC: PHP Mess Detector">
        <echo message="Skipping qc:phpmd" level="warning"/>
        <!--<exec executable="${project.bin_dir}/phpmd" checkreturn="true" logoutput="true">-->
            <!--<arg path="${project.src_dir}"/>-->
            <!--<arg value="text"/>-->
            <!--<arg path="${project.build_dir}/logs/phpmd.xml"/>-->
        <!--</exec>-->
    </target>

    <target name="qc:phpmetrics" description="QC: static analysis tool for PHP">
        <if>
            <available file="${project.basedir}/.phpmetrics.yml" type="file" property="qc.phpmetrics.file"/>
            <then>
                <exec executable="${project.bin_dir}/phpmetrics" checkreturn="true" logoutput="true">
                    <arg value="--no-interaction"/>
                    <arg value="--config"/>
                    <arg path="./.phpmetrics.yml"/>
                </exec>
            </then>
            <else>
                <echo message="Skipping qc:phpmetrics" level="warning"/>
            </else>
        </if>
    </target>

    <target name="qc:phpspec" description="QC: SpecBDD - toolset to drive emergent design by specification">
        <if>
            <available file="${project.basedir}/phpspec.yml" type="file" property="qc.phpspec.file"/>
            <then>
                <exec executable="${project.bin_dir}/phpspec" checkreturn="true" logoutput="true">
                    <arg value="run"/>
                </exec>
            </then>
            <else>
                <echo message="Skipping qc:phpspec" level="warning"/>
            </else>
        </if>
    </target>

    <target name="qc:phpunit" description="QC: Runs unit tests in PHPUnit">
        <if>
            <available file="${project.basedir}/phpunit.xml" type="file" property="qc.phpunit.file"/>
            <then>
                <exec executable="${project.bin_dir}/phpunit" checkreturn="true" logoutput="true">
                    <arg value="-c"/>
                    <arg value="phpunit.xml"/>
                </exec>
            </then>
            <else>
                <echo message="Skipping qc:phpunit" level="warning"/>
            </else>
        </if>
    </target>

    <target name="qc:humbug" description="QC: Runs Humbug - a Mutation Testing framework">
        <if>
            <available file="${project.basedir}/humbug.json.dist" type="file" property="qc.humbug.file"/>
            <then>
                <exec executable="${project.bin_dir}/humbug" checkreturn="true" logoutput="true">
                    <arg value="--no-progress-bar"/>
                    <arg value="--no-interaction"/>
                    <arg value="-vvv"/>
                </exec>
            </then>
            <else>
                <echo message="Skipping qc:humbug" level="warning"/>
            </else>
        </if>
    </target>

    <target name="qc:sensio-security" description="QC: Checks security issues with project dependencies">
        <exec executable="curl" checkreturn="true" logoutput="true">
            <arg line='-H "Accept: text/plain" https://security.sensiolabs.org/check_lock -F lock=@composer.lock'/>
        </exec>
    </target>

    <target name="build:prod"  description="Builds application for &quot;prod&quot; (production) enviroment" depends="initialize,vendors:prod"/>
    <target name="build:dev" description="Builds application for &quot;dev&quot; (development) enviroment" depends="initialize,vendors:dev,qc"/>

    <target name="php-cs-fixer">
        <exec executable="${project.bin_dir}/php-cs-fixer" checkreturn="true" logoutput="true">
            <arg line="fix"/>
            <arg value="-vvv"/>
        </exec>
    </target>

</project>


<!--

<?xml version="1.0" encoding="UTF-8"?>
<project name="Core vendor for Berlingske Media" default="build">

    <property environment="prod"/>
    <property name="env.SYMFONY_ENV" value="prod"/>
    <property name="dir.build" value="${basedir}/build"/>

    <target name="build"
            depends="vendors, remove-composer-lock">
    </target>

    <target name="test"
            depends="vendors, qc, remove-composer-lock">
    </target>

    <target name="remove-composer-lock">
        <delete file="composer.lock"/>
    </target>

    <target name="vendors" description="Add Vendors">
        <delete file="composer.lock"/>
        <exec executable="composer" failonerror="true">
            <env key="SYMFONY_ENV" value="prod"/>
            <arg value="update"/>
            <arg value="-\-no-interaction"/>
            <arg value="-\-optimize-autoloader"/>
        </exec>
    </target>

    <target name="qc" depends="phpmd,phpcs,phpunit,phpcsfixer,sensio-security"/>

    <target name="phpmd">
        <exec executable="php" failonerror="true">
            <arg value="vendor/bin/phpmd"/>
            <arg value="src"/>
            <arg value="text"/>
            <arg value="codesize"/>
        </exec>
    </target>

    <target name="phpcs">
        <exec executable="php" failonerror="true">
            <arg value="vendor/bin/phpcs"/>
            <arg value="src"/>
            <arg value="-\-standard=PSR2"/>
            <arg value="-\-extensions=php"/>
        </exec>
    </target>

    <target name="phpcbf">
        <exec executable="php" failonerror="true">
            <arg value="vendor/bin/phpcbf"/>
            <arg value="src"/>
            <arg value="-\-standard=PSR2"/>
            <arg value="-\-extensions=php"/>
        </exec>
    </target>

    <target name="phpcsfixer">
        <exec executable="php" failonerror="true">
            <arg value="vendor/bin/php-cs-fixer"/>
            <arg value="fix"/>
            <arg value="src/"/>
            <arg value="-\-rules=@Symfony,-concat_without_spaces"/>
            <arg value="-\-dry-run"/>
            <arg value="-v"/>
            <arg value="-\-using-cache=false"/>
        </exec>
    </target>

    <target name="phpcsfixer-fix">
        <exec executable="php" failonerror="true">
            <arg value="vendor/bin/php-cs-fixer"/>
            <arg value="fix"/>
            <arg value="src/"/>
            <arg value="-\-rules=@Symfony,-concat_without_spaces"/>
            <arg value="-v"/>
            <arg value="-\-using-cache=false"/>
        </exec>
    </target>

    <target name="phpunit">
        <exec executable="php" failonerror="true">
            <arg value="vendor/bin/phpunit"/>
            <arg value="-c"/>
            <arg value="phpunit.xml"/>
        </exec>
    </target>

</project>

-->